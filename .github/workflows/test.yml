name: Test on Push and PR

on:
  push:
    branches: [main]
  pull_request:

env:
  CI: true

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Volta
        uses: volta-cli/action@v1

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Add Windows certificate
        if: matrix.os == 'windows-latest'
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'win-certificate.pfx'
          encodedString: ${{ secrets.WINDOWS_PFX_CERT }}

      # Use on github actions cloud
      - name: Add MacOS certs
        if: matrix.os == 'macOS-latest'
        run: chmod +x bin/add-macos-cert.sh && ./bin/add-macos-cert.sh
        env:
          MACOS_C12_CERT: ${{ secrets.MACOS_C12_CERT }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

      - name: Install dependencies
        run: 'npm install'

      - name: Build electron app
        env:
          WINDOWS_PFX_FILE: ${{ steps.write_file.outputs.filePath }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          DEBUG: electron-packager
        run: 'npm run make'

      - uses: actions/upload-artifact@v2
        name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        with:
          name: win-x64
          path: ./out/make/**/*Setup.exe

      - uses: actions/upload-artifact@v2
        name: Upload MacOS artifacts
        if: matrix.os == 'macOS-latest'
        with:
          name: macOS-x64
          path: ./out/make/**/*.*
